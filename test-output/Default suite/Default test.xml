<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-HQ5STS1" ignored="0" name="Default test" tests="18" failures="0" timestamp="2022-06-06T10:28:38 GST" time="2.569" errors="0">
  <testcase name="@BeforeTest setup" time="2.497" classname="tests.BaseClass">
    <failure type="org.openqa.selenium.WebDriverException" message="Connection refused: connect
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-HQ5STS1&amp;apos;, ip: &amp;apos;5.31.127.15&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_311&amp;apos;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Connection refused: connect
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-HQ5STS1', ip: '5.31.127.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_311'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor.lambda$5(AppiumCommandExecutor.java:251)
at java.util.Optional.orElseGet(Unknown Source)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at tests.BaseClass.setup(BaseClass.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.net.ConnectException: Connection refused: connect
at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
at java.net.PlainSocketImpl.connect(Unknown Source)
at java.net.SocksSocketImpl.connect(Unknown Source)
at java.net.Socket.connect(Unknown Source)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
... 35 more
]]>
    </failure>
  </testcase> <!-- @BeforeTest setup -->
  <testcase name="@AfterTest teardown" time="-1.654496918735E9" classname="tests.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="Test1" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test2" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test2 -->
  <testcase name="Test3" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test3 -->
  <testcase name="Test4" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test4 -->
  <testcase name="Test5" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test5 -->
  <testcase name="Test6" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test6 -->
  <testcase name="Test7" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test7 -->
  <testcase name="Test8" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test8 -->
  <testcase name="Test9" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test9 -->
  <testcase name="Test10" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test10 -->
  <testcase name="Test11" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test11 -->
  <testcase name="Test12" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test12 -->
  <testcase name="Test13" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test13 -->
  <testcase name="Test14" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test14 -->
  <testcase name="Test15" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test15 -->
  <testcase name="Test16" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test16 -->
  <testcase name="Test17" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test17 -->
  <testcase name="Test18" time="0.0" classname="tests.FirstTest">
    <skipped/>
  </testcase> <!-- Test18 -->
</testsuite> <!-- Default test -->
